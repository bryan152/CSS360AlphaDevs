# AlphaDevs

## Aishwarya Munigoti

![Alt Text](https://datarob.com/content/images/2019/08/SDLC-stages.png)

### #1: New e-Commerce site
The incremental model would be the most appropriate for this project, because for every new template or scripting extension proposed, a new set of requirements
and team need to be created. This mirrors how in the incremental model, there can be any number of phases, and each phase includes the entire process of the
waterfall model within it. This project is also in the category of projects that the incremental model is often used with, products where feature updates are
expected often and products that are usable consistently. 

### #2: Dental office site
The incremental model would be the most appropriate for this project due to the high possibility of new features being added to the product and a prototype with lower functionality being able to be delivered. With each proposal of new features, the stages of development would be repeated for each phase, the result being a version of the product being available after each phase. The dentist friend is also flexible with the time we will deliver the software, which allows us to have as many phases as we need to complete all the features for the product. 

### #3: Nuclear Power Plant
The waterfall model would be the most appropriate for this project as this project would be classified as a critical product, and there is a final end product. 
As the software is expected to last for 10 years and has high stakes to perform its job properly, it would be considered a critical system, and would thus need
to be developed in clearly defined phases with clear specifications and requirements fulfilled before moving onto the next phase. 

### #4: Department of Transportation
The integration and configuration model would be the most appropriate for this project, as the company has developed similar solutions and this entails that they would simply modify the code and release it with the features needed for this specific software. As the application stores data on the Cloud, it is a web service that the integration model is well-suited for. The integration model also usually delivers software quickly, which fits into the time in the bid the company took.

### #5: Reducing Traffic
The waterfall model would be the most appropriate for this project, as the product needing to be developed is an embedded system. As the products needing to be developed are GPS systems, and general traffic technology, the cleary defined phases of the waterfall model would complement them as it is hard to modify hardware and thus needs to be developed with clear specifications and requirements in place, which the waterfall model offers. Also, the team is equipped for developing embedded system softwares, and has skills in C++, a legacy language, which will be around and has been around for years. 

### #6: Educational game
The extreme programming model would be the most appropriate for this project as the developers would need to work closely with the customer and the requirements change quickly with new sets of requirements added. As extreme programming does not have formal specifications with rapidly changing requirements, this would work well with the games needed to be delivered ASAP. Also the games would need to be developed quickly so testing would need to be done at the same time as writing the code, to have games out quickly.

### #7: Global Health
The waterfall model would be the most appropriate for this project as the software needing to be developed is critical and has broad repurcussions, and there is a clear development phase defined as well. The software would have a positive impact on the health of people residing in developing countries, so it would need to be developed with clear phases and it being signed off for each phase. With a clearly defined development phase as well, it would not fit more agile methods with no strict phases defined. Also, the team working on the project may grow, and waterfall models work well with large teams who need clearly defined phases.
